# создание списков типа [a, b, c, …, x, y, z]
# берем промежуток из талицы кодировки utf-8 1072-1103 элементы и получаем все буквы русского алфавита кроме ё
# С помошью ф-ии chr() преобразуем номер элемента в букву и все это в списке
ru_alphabet = [chr(i) for i in range(1072, 1104)]
# вставляем после е - ё
ru_alphabet.insert(6, chr(1105))
# аналгично для больших букв
RU_alphabet = [chr(i) for i in range(1040, 1072)]
RU_alphabet.insert(6, chr(1025))

# аналагично для английских больших и маленьких, но тут все буквы языка в диапазоне
en_alphabet = [chr(i) for i in range(97, 123)]
EN_alphabet = [chr(i) for i in range(65, 91)]


# создание словаря с шагом d
# с помощью него мы можем зашифровать любой симвл из русского или английского алфавита
def gen_cesar_dict(d):
    final_dict = {}
    # перебираются все алфавиты
    for j in [ru_alphabet, en_alphabet, RU_alphabet, EN_alphabet]:
        # каждый символ сдигается на d
        # если i+d выходит за пределы, то указатель передвигается на начало  списка
        # ключ j[i], значение j[(i+d)%(длинна алфавита)]
        final_dict.update({j[i]: j[(i + d + len(j)) % len(j)] for i in range(len(j))})
    return final_dict


# шифрование текста
# цифры и другие спец.символы не шифруются
def code(d, text):
    # создаем таблицу шифрования
    code_dictionary = gen_cesar_dict(d)
    # выходная строка
    new_text = ''
    # поэлементное добавление зашифрованного символа
    for i in text:
        # если этот элемент есть в нашей таблице, то шифруем и добавляем в строку
        try:
            new_char = code_dictionary[i]
        # если такого элемента нет, то просто добавляем без изменений
        except KeyError:
            new_char = i
        # добавление
        new_text += new_char
    return new_text


# расшифрование путем шифрования с шагом -d
# получаем таблицу расшифрования
def decode(d, text):
    return code(-d, text)


# распечатывание первых 20 букв с d= 0->32
# если сдвинуть на 33 то ничего не изменится
def hack(text):
    for i in range(33):
        print(f'{i}: {code(i, text[:20])}')


# выполняется когда запускается файл напрямую(не через импорт)
# тут все понятно вроде как
if __name__ == "__main__":
    print("Здравствуйте")
    while True:
        print('Для кодирования текста введите - 1\nДля декодирование текста введите - 2\nДля брутофорса введите - 3\n' +
              'Для выхода из программы введите - 4')
        # выбор сценария путем ввода
        direct = input('>')
        if direct == '1':
            print('Введите значение d:')
            # преобразование str в int
            d = int(input('>'))
            print('Введите текст:')
            text = input('>')
            # форматированный вывод
            print(f'Закодированный текст:\n{code(d, text)}')
        # аналогично
        elif direct == '2':
            print('Введите значение d:')
            d = int(input('>'))
            print('Введите текст:')
            text = input('>')
            print(f'Декодированный текст:\n{decode(d, text)}')
        elif direct == '3':
            print('Введите текст:')
            text = input('>')
            print('Выберите цифру от 1 до 32')
            # распечатывание первых 20 букв с d= 0->32
            for i in range(1, 33):
                print(f'{i}: {decode(i, text[:20])}')
            d = int(input('>'))
            # вывод текста полностью
            print(f'Декодированный текст:\n{decode(d, text)}')
        elif direct == '4':
            exit()
        print()